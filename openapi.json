{
  "openapi": "3.0.1",
  "info": {
    "title": "HavenCNC Server API",
    "description": "REST API for CNC server management hosted within WinForms application",
    "contact": {
      "name": "HavenCNC Server Team"
    },
    "version": "v1"
  },
  "paths": {
    "/api/CNCFeatures/IsToolLoaded": {
      "get": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Check if tool is loaded",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/IsClampOpened": {
      "get": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Check if clamp is opened",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/DropTool": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Drop the current tool",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/ChangeToTool/{toolNumber}": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Change to specified tool",
        "parameters": [
          {
            "name": "toolNumber",
            "in": "path",
            "description": "Tool number to change to",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "returnToCurrentPosition",
            "in": "query",
            "description": "Whether to return to current position after tool change",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/GetCurrentToolNumber": {
      "get": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Get current tool number",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/CheckTool": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Check tool (pauses and raises tool, remeasures if tool changed)",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/MeasureCurrentTool": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Measure current tool",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/MeasureAllTools": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Measure all tools",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/TouchOff": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Touch off operation",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/StartLaser": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Start laser",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/StopLaser": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Stop laser",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/IsLaserOn": {
      "get": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Check if laser is on",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/StartPointer": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Start pointer",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/StopPointer": {
      "post": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Stop pointer",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCFeatures/IsPointerOn": {
      "get": {
        "tags": [
          "CNCFeatures"
        ],
        "summary": "Check if pointer is on",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/GetCurrentInputs": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Get current input states",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/GetCurrentOutputs": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Get current output states",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/IsInputActive/{inputNumber}": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Check if specific input is active",
        "parameters": [
          {
            "name": "inputNumber",
            "in": "path",
            "description": "Input number to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/IsOutputActive/{outputNumber}": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Check if specific output is active",
        "parameters": [
          {
            "name": "outputNumber",
            "in": "path",
            "description": "Output number to check",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/SetOutputState": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Set output state",
        "requestBody": {
          "description": "Output setting request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOutputRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetOutputRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetOutputRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/RetractDustBoot": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Retract dust boot",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/ExtendDustBoot": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Extend dust boot",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/IsDustBootRetracted": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Check if dust boot is retracted",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/StartVacuum": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Start vacuum",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/StopVacuum": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Stop vacuum",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/IsVacuumOn": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Check if vacuum is on",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/StartDustCollector": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Start dust collector",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/StopDustCollector": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Stop dust collector",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/IsDustCollectorOn": {
      "get": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Check if dust collector is on",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/OverrideInput": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Override input value (for testing purposes only)",
        "requestBody": {
          "description": "Input override request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/ResetInputOverrides": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Reset all input overrides",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/OverrideOutput": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Override output value (for testing purposes only)",
        "requestBody": {
          "description": "Output override request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OverrideIORequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCIO/ResetOutputOverrides": {
      "post": {
        "tags": [
          "CNCIO"
        ],
        "summary": "Reset all output overrides",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SetMoveType": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Set the movement type (relative or absolute)",
        "requestBody": {
          "description": "Movement type to set",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveType"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveType"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveType"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetMoveType": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get the current movement type",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetCurrentPosition": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get current machine position",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/MoveTo": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Move to specified coordinates",
        "requestBody": {
          "description": "Move request with coordinates and optional speeds",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/MoveToUtil": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Move to coordinates until an IO event occurs",
        "requestBody": {
          "description": "Move request with coordinates, speeds, and IO event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToUntilRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToUntilRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveToUntilRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/MoveDirectionUntil": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Move in a direction until an IO event occurs",
        "requestBody": {
          "description": "Direction movement request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveDirectionUntilRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveDirectionUntilRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveDirectionUntilRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/ChangeToFixture/{fixtureNumber}": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Change to a specific fixture",
        "parameters": [
          {
            "name": "fixtureNumber",
            "in": "path",
            "description": "Fixture number to change to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SetFixtureToPoint": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Set fixture to specific point",
        "requestBody": {
          "description": "Fixture setting request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFixtureRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFixtureRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetFixtureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SetCurrentFixturePoint": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Set current fixture to specified point",
        "requestBody": {
          "description": "Point to set current fixture to",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CNCPoint"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CNCPoint"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CNCPoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetCurrentFixtureNumber": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get current fixture number",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SaveCurrentZToCurrentFixture": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Save current Z position to current fixture",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SaveCurrentXYToCurrentFixture": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Save current XY position to current fixture",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SaveCurrentXYZToCurrentFixture": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Save current XYZ position to current fixture",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetFastFeedRate": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get fast feed rate",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SetFastFeedRate": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Set fast feed rate",
        "requestBody": {
          "description": "Feed rate to set",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetNormalFeedRate": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get normal feed rate",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/SetNormalFeedRate": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Set normal feed rate",
        "requestBody": {
          "description": "Feed rate to set",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/AdjustNormalFeedRate": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Adjust normal feed rate by factor",
        "requestBody": {
          "description": "Adjustment factor (-200 to +200, where 0 is no change, 100 is double, -100 is half)",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetCurrentNormalFeedRateFactor": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get current normal feed rate adjustment factor",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/ResetNormalFeedRateFactor": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Reset normal feed rate factor to default",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/AdjustFastFeedRate": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Adjust fast feed rate by factor",
        "requestBody": {
          "description": "Adjustment factor (-200 to +200, where 0 is no change, 100 is double, -100 is half)",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/GetCurrentFastFeedRateFactor": {
      "get": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Get current fast feed rate adjustment factor",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCMovement/ResetFastFeedRateFactor": {
      "post": {
        "tags": [
          "CNCMovement"
        ],
        "summary": "Reset fast feed rate factor to default",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/Stop": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Stop G-code execution",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/Resume": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Resume G-code execution",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/ResumeAt/{lineNumber}": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Resume G-code execution at specific line",
        "parameters": [
          {
            "name": "lineNumber",
            "in": "path",
            "description": "Line number to resume at",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/RunGCode": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Run G-code",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/RunGCodeCommand": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Run single G-code command",
        "requestBody": {
          "description": "G-code command to run",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/GetCurrentGCode": {
      "get": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Get current G-code",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/LoadGCode": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Load G-code",
        "requestBody": {
          "description": "G-code load request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadGCodeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadGCodeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoadGCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/LoadGCodeFromFile": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Load G-code from file",
        "requestBody": {
          "description": "File path to load G-code from",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/GetCurrentLineNumber": {
      "get": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Get current line number",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/StartStepRun": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Start step run mode",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/EndStepRun": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "End step run mode",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/StepRunNext": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Execute next step in step run mode",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCProgram/RunFromCurrentStep": {
      "post": {
        "tags": [
          "CNCProgram"
        ],
        "summary": "Run from current step",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSetup/UpdateCentroidSettings": {
      "post": {
        "tags": [
          "CNCSetup"
        ],
        "summary": "Update Centroid settings",
        "requestBody": {
          "description": "Centroid settings to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CentroidSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CentroidSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CentroidSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/StartSpindle": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Start the spindle",
        "requestBody": {
          "description": "Optional speed parameter",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/StopSpindle": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Stop the spindle",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/WarmUpSpindle": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Warm up the spindle",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/IsSpindleRunning": {
      "get": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Check if spindle is running",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/GetSpindleSpeed": {
      "get": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Get current spindle speed",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/SetSpindleSpeed": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Set spindle speed",
        "requestBody": {
          "description": "Speed to set",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/AdjustSpindleSpeed": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Adjust spindle speed by factor",
        "requestBody": {
          "description": "Adjustment factor (-200 to +200, where 0 is no change, 100 is double, -100 is half)",
          "content": {
            "application/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "text/json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/GetCurrentSpindleSpeedFactor": {
      "get": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Get current spindle speed adjustment factor",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSpindle/ResetSpindleSpeedFactor": {
      "post": {
        "tags": [
          "CNCSpindle"
        ],
        "summary": "Reset spindle speed factor to default",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/EnterFullScreen": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Enter full screen mode",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/ExitFullScreen": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Exit full screen mode",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/Shutdown": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Shutdown the system",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/RestartCentroid": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Restart Centroid system",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/EmergencyStop": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Emergency stop",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/IsHomed": {
      "get": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Check if machine is homed",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/UnhomeMachine": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Unhome the machine",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/HomeMachine": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Home the machine",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/GetCurrentErrorState": {
      "get": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Get current error state",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/ResetErrorState": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Reset error state",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/ResetMachine": {
      "post": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Reset the machine",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CNCSystem/HasCurrentErrors": {
      "get": {
        "tags": [
          "CNCSystem"
        ],
        "summary": "Check if machine has current errors",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AxisConfig": {
        "type": "object",
        "properties": {
          "axisName": {
            "type": "string",
            "description": "Name of the axis (e.g., \"X\", \"Y\", \"Z\", \"A\")",
            "nullable": true
          },
          "axisNumber": {
            "type": "integer",
            "description": "Numeric identifier for the axis",
            "format": "int32"
          },
          "pulsesPerRevolution": {
            "type": "integer",
            "description": "Number of pulses per revolution for the stepper motor",
            "format": "int32"
          },
          "revolutionsPerInch": {
            "type": "number",
            "description": "Number of revolutions per inch of travel",
            "format": "double"
          },
          "maxSpeedPositive": {
            "type": "number",
            "description": "Maximum speed in positive direction",
            "format": "double"
          },
          "maxSpeedNegative": {
            "type": "number",
            "description": "Maximum speed in negative direction",
            "format": "double"
          },
          "fastSpeed": {
            "type": "number",
            "description": "Fast speed setting",
            "format": "double"
          },
          "speed": {
            "type": "number",
            "description": "Normal speed setting",
            "format": "double"
          },
          "homingSpeed": {
            "type": "number",
            "description": "Homing speed",
            "format": "double"
          },
          "homingDirectionPositive": {
            "type": "boolean",
            "description": "Whether homing direction is positive (true) or negative (false)"
          },
          "pairedWithAxis": {
            "type": "integer",
            "description": "Axis number this axis is paired with (-1 if not paired)",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Configuration for a machine axis"
      },
      "CNCPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "X-axis coordinate",
            "format": "double"
          },
          "y": {
            "type": "number",
            "description": "Y-axis coordinate",
            "format": "double"
          },
          "z": {
            "type": "number",
            "description": "Z-axis coordinate",
            "format": "double"
          },
          "a": {
            "type": "number",
            "description": "A-axis coordinate (rotational axis)",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Represents a point in CNC machine coordinates with X, Y, Z, and A axis values"
      },
      "CentroidInput": {
        "type": "object",
        "properties": {
          "inputNumber": {
            "type": "integer",
            "description": "Input number/identifier",
            "format": "int32"
          },
          "inputName": {
            "type": "string",
            "description": "Human-readable name for the input",
            "nullable": true
          },
          "normallyOpen": {
            "type": "boolean",
            "description": "Whether the input is normally open (true) or normally closed (false)"
          }
        },
        "additionalProperties": false,
        "description": "Configuration for a Centroid input"
      },
      "CentroidOutput": {
        "type": "object",
        "properties": {
          "outputNumber": {
            "type": "integer",
            "description": "Output number/identifier",
            "format": "int32"
          },
          "outputName": {
            "type": "string",
            "description": "Human-readable name for the output",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Configuration for a Centroid output"
      },
      "CentroidSettings": {
        "type": "object",
        "properties": {
          "xMinTravel": {
            "type": "number",
            "description": "Minimum travel distance for X axis",
            "format": "double"
          },
          "xMaxTravel": {
            "type": "number",
            "description": "Maximum travel distance for X axis",
            "format": "double"
          },
          "yMinTravel": {
            "type": "number",
            "description": "Minimum travel distance for Y axis",
            "format": "double"
          },
          "yMaxTravel": {
            "type": "number",
            "description": "Maximum travel distance for Y axis",
            "format": "double"
          },
          "zMinTravel": {
            "type": "number",
            "description": "Minimum travel distance for Z axis",
            "format": "double"
          },
          "zMaxTravel": {
            "type": "number",
            "description": "Maximum travel distance for Z axis",
            "format": "double"
          },
          "axes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AxisConfig"
            },
            "description": "Configuration for all machine axes",
            "nullable": true
          },
          "input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CentroidInput"
            },
            "description": "Configuration for all machine inputs",
            "nullable": true
          },
          "output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CentroidOutput"
            },
            "description": "Configuration for all machine outputs",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Complete Centroid machine settings configuration"
      },
      "IOEvent": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "IO events that can be monitored or triggered",
        "format": "int32"
      },
      "LoadGCodeRequest": {
        "type": "object",
        "properties": {
          "gCode": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "G-code lines to load",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for loading G-code"
      },
      "MoveDirection": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "description": "Directions for machine movement",
        "format": "int32"
      },
      "MoveDirectionUntilRequest": {
        "type": "object",
        "properties": {
          "direction": {
            "$ref": "#/components/schemas/MoveDirection"
          },
          "event": {
            "$ref": "#/components/schemas/IOEvent"
          },
          "maxDistance": {
            "type": "number",
            "description": "Maximum distance to move (optional)",
            "format": "double",
            "nullable": true
          },
          "speed": {
            "type": "number",
            "description": "Movement speed (optional)",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for directional movement until an event"
      },
      "MoveToRequest": {
        "type": "object",
        "properties": {
          "point": {
            "$ref": "#/components/schemas/CNCPoint"
          },
          "xySpeed": {
            "type": "number",
            "description": "XY movement speed (optional)",
            "format": "double",
            "nullable": true
          },
          "zSpeed": {
            "type": "number",
            "description": "Z movement speed (optional)",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request model for moving to a specific point"
      },
      "MoveToUntilRequest": {
        "type": "object",
        "properties": {
          "point": {
            "$ref": "#/components/schemas/CNCPoint"
          },
          "xySpeed": {
            "type": "number",
            "description": "XY movement speed (optional)",
            "format": "double",
            "nullable": true
          },
          "zSpeed": {
            "type": "number",
            "description": "Z movement speed (optional)",
            "format": "double",
            "nullable": true
          },
          "event": {
            "$ref": "#/components/schemas/IOEvent"
          }
        },
        "additionalProperties": false,
        "description": "Request model for moving until an IO event occurs"
      },
      "MoveType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "Types of movement commands",
        "format": "int32"
      },
      "OverrideIORequest": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Input/Output number",
            "format": "int32"
          },
          "value": {
            "type": "boolean",
            "description": "Override value"
          }
        },
        "additionalProperties": false,
        "description": "Request model for input/output overrides (testing only)"
      },
      "SetFixtureRequest": {
        "type": "object",
        "properties": {
          "fixtureNumber": {
            "type": "string",
            "description": "Fixture number",
            "nullable": true
          },
          "point": {
            "$ref": "#/components/schemas/CNCPoint"
          }
        },
        "additionalProperties": false,
        "description": "Request model for setting fixture"
      },
      "SetOutputRequest": {
        "type": "object",
        "properties": {
          "outputNumber": {
            "type": "integer",
            "description": "Output number",
            "format": "int32"
          },
          "state": {
            "type": "boolean",
            "description": "Desired state (true = on, false = off)"
          }
        },
        "additionalProperties": false,
        "description": "Request model for setting output state"
      }
    }
  }
}